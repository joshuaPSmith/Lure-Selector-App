{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Documents\\\\LureSelectorApp\\\\src\\\\components\\\\Weather.tsx\",\n  _s = $RefreshSig$();\n// components/Weather.tsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = ({\n  setLightCondition\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n            params: {\n              lat: latitude,\n              lon: longitude,\n              appid: 'YOUR_API_KEY',\n              // Replace with your API key\n              units: 'metric'\n            }\n          });\n          setWeather(response.data);\n          const condition = response.data.weather[0].main.toLowerCase();\n          if (condition.includes('clear')) {\n            setLightCondition('Bright Light');\n          } else {\n            setLightCondition('Low Light');\n          }\n        } catch (err) {\n          setError('Failed to fetch weather data');\n        }\n      }, () => {\n        setError('Location access denied');\n      });\n    } else {\n      setError('Geolocation not supported');\n    }\n  }, [setLightCondition]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    temp\n  } = weather.main;\n  const condition = weather.weather[0].main;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-yellow-100 p-4 rounded-lg text-center shadow-md mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-yellow-700\",\n      children: \"\\uD83C\\uDF24 Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-700\",\n      children: [\"Temperature: \", temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-700\",\n      children: [\"Condition: \", condition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"dducRVO0pCJQnxjTimDps8bxXd8=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Weather","setLightCondition","_s","weather","setWeather","error","setError","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","get","params","lat","lon","appid","units","data","condition","main","toLowerCase","includes","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","temp","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Documents/LureSelectorApp/src/components/Weather.tsx"],"sourcesContent":["// components/Weather.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface WeatherProps {\r\n    setLightCondition: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst Weather: React.FC<WeatherProps> = ({ setLightCondition }) => {\r\n    const [weather, setWeather] = useState<any>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                async (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    try {\r\n                        const response = await axios.get(\r\n                            `https://api.openweathermap.org/data/2.5/weather`,\r\n                            {\r\n                                params: {\r\n                                    lat: latitude,\r\n                                    lon: longitude,\r\n                                    appid: 'YOUR_API_KEY', // Replace with your API key\r\n                                    units: 'metric',\r\n                                },\r\n                            }\r\n                        );\r\n                        setWeather(response.data);\r\n                        const condition = response.data.weather[0].main.toLowerCase();\r\n                        if (condition.includes('clear')) {\r\n                            setLightCondition('Bright Light');\r\n                        } else {\r\n                            setLightCondition('Low Light');\r\n                        }\r\n                    } catch (err) {\r\n                        setError('Failed to fetch weather data');\r\n                    }\r\n                },\r\n                () => {\r\n                    setError('Location access denied');\r\n                }\r\n            );\r\n        } else {\r\n            setError('Geolocation not supported');\r\n        }\r\n    }, [setLightCondition]);\r\n\r\n    if (error) {\r\n        return <p className=\"text-center text-red-500\">{error}</p>;\r\n    }\r\n\r\n    if (!weather) {\r\n        return <p className=\"text-center\">Loading weather...</p>;\r\n    }\r\n\r\n    const { temp } = weather.main;\r\n    const condition = weather.weather[0].main;\r\n\r\n    return (\r\n        <div className=\"bg-yellow-100 p-4 rounded-lg text-center shadow-md mb-5\">\r\n            <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸŒ¤ Current Weather</h3>\r\n            <p className=\"text-gray-700\">Temperature: {temp}Â°C</p>\r\n            <p className=\"text-gray-700\">Condition: {condition}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}